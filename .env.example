# Firebase Configuration
# Copy this file to .env.local and replace with your actual Firebase project values
# Get these values from Firebase Console > Project Settings > General > Your apps > Web app

NEXT_PUBLIC_FIREBASE_API_KEY=your_api_key_here
NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN=your_project_id.firebaseapp.com
NEXT_PUBLIC_FIREBASE_PROJECT_ID=your_project_id_here
NEXT_PUBLIC_FIREBASE_STORAGE_BUCKET=your_project_id.appspot.com
NEXT_PUBLIC_FIREBASE_MESSAGING_SENDER_ID=your_messaging_sender_id_here
NEXT_PUBLIC_FIREBASE_APP_ID=your_app_id_here

# Setup Security Configuration
# These variables control access to the /setup page for creating the first admin account

# Allow setup page access (set to 'true' only during initial setup)
# IMPORTANT: Set to 'false' or remove after creating your first admin account
# NEXT_PUBLIC_ALLOW_SETUP=true

# Setup token for production environments (optional but recommended)
# Generate a secure random string and keep it secret
# Only needed if NEXT_PUBLIC_ALLOW_SETUP is 'false' or in production
NEXT_PUBLIC_SETUP_TOKEN=your_secure_random_token_here

# Example of generating a secure token:
# node -e "console.log(require('crypto').randomBytes(32).toString('hex'))"

# Google Maps Configuration
NEXT_PUBLIC_GOOGLE_MAPS_API_KEY=your_google_maps_api_key_here

# Instructions:
# 1. Copy this file to .env.local and replace the placeholder values
# 2. Get your Firebase config from: https://console.firebase.google.com/
#    - Go to Project Settings > General > Your apps > Web app
#    - Copy the config values to the Firebase variables above
# 3. Get your Google Maps API key from: https://console.cloud.google.com/google/maps-apis
# 4. Make sure to enable the following APIs in your Google Cloud Console:
#    - Maps JavaScript API (required)
#    - Places API (optional, for enhanced location features)
#    - Geocoding API (optional, for address conversion)
# 5. Restrict your API keys to your domain for security
# 6. In Firebase Console, enable Authentication and Firestore Database