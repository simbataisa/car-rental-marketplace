rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // TEMPORARY DEVELOPMENT RULES - ALLOWS ALL ACCESS
    // WARNING: DO NOT USE IN PRODUCTION!
    match /{document=**} {
      allow read, write: if true;
    }
  }
}

// Instructions:
// 1. Copy the rules above
// 2. Go to Firebase Console > Firestore Database > Rules
// 3. Replace current rules with the above rules
// 4. Click "Publish"
// 5. Run your seed-data.js script
// 6. After seeding, restore the original production rules from FIREBASE_SETUP.md

// Original production rules (restore after seeding):
/*
rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Users can read and write their own user document
    match /users/{userId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
      // Allow admins to read all user documents
      allow read: if request.auth != null && 
        exists(/databases/$(database)/documents/users/$(request.auth.uid)) &&
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
      // Allow admins to create new user documents
      allow create: if request.auth != null && 
        exists(/databases/$(database)/documents/users/$(request.auth.uid)) &&
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }
    
    // Orders collection - role-based access
    match /orders/{orderId} {
      allow read, write: if request.auth != null && 
        exists(/databases/$(database)/documents/users/$(request.auth.uid)) &&
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role in ['admin', 'customer_service', 'telesale', 'operation'];
    }
    
    // Vehicles collection
    match /vehicles/{vehicleId} {
      allow read: if request.auth != null;
      allow write: if request.auth != null && 
        exists(/databases/$(database)/documents/users/$(request.auth.uid)) &&
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role in ['admin', 'operation'];
    }
  }
}
*/